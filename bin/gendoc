#!/bin/bash
set -e

# Location of current file
fileLocation=$PWD/$(dirname "$0")
# Remove "/." from end of string if it exists
if [[ $fileLocation == *"/." ]]; then
  fileLocation="${fileLocation%/?}"
fi

# Set root location
initLocation="$(dirname "$fileLocation")"

# Location of docker_generate.env file
pathToDockerEnvFile="$initLocation/docker_generate.env"

# Include docker env variables, exit if file does not exist
if ! [ -f "$pathToDockerEnvFile" ]; then
  echo "WARNING: docker_generate.env file does not exist. Please copy from docker_generate.env.sample and fill the env variables."
  exit 1
fi
source "$pathToDockerEnvFile"

# Include all files from functions folder
for f in "$initLocation/bin/functions/"*; do source "$f"; done

# Define an associative array that maps keys to function names
declare -A doc_functions=(
# Init docker command
  ["init"]=initDocker
# Database commands
  ["dump-setup"]=setupDump
  ["dump-create"]=createDump
# Docker manage commands
  ["start"]=dockerStart
  ["rebuild"]=dockerRebuild
  ["stop"]=dockerStop
  ["rmc"]=dockerContainersDelete
  ["status"]=dockerContainersStatus
# Go to container commands
  ["fe"]=intoFrontend
  ["be"]=intoBackend
  ["db"]=intoDatabase
)
# Loop through the keys in the array and execute the corresponding function
for key in "${!doc_functions[@]}"; do
  if [ "$key" == "$1" ]; then
    "${doc_functions[$key]}" "${@:2}"
  fi
done
